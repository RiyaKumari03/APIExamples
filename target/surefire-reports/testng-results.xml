<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="13" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-14T17:26:14Z" name="Suite" finished-at="2023-01-14T17:26:27Z" duration-ms="12479">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@29647f75]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-01-14T17:26:14Z" name="TestAPIClass" finished-at="2023-01-14T17:26:27Z" duration-ms="12479">
      <class name="APIBasics.TestAPIClass">
        <test-method is-config="true" signature="before()[pri:0, instance:APIBasics.TestAPIClass@2177849e]" started-at="2023-01-14T17:26:23Z" name="before" finished-at="2023-01-14T17:26:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addPlace()[pri:1, instance:APIBasics.TestAPIClass@2177849e]" started-at="2023-01-14T17:26:23Z" name="addPlace" finished-at="2023-01-14T17:26:23Z" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPlace -->
        <test-method signature="updatePlace()[pri:2, instance:APIBasics.TestAPIClass@2177849e]" started-at="2023-01-14T17:26:24Z" name="updatePlace" finished-at="2023-01-14T17:26:25Z" duration-ms="970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePlace -->
        <test-method signature="getPlace()[pri:3, instance:APIBasics.TestAPIClass@2177849e]" started-at="2023-01-14T17:26:26Z" name="getPlace" finished-at="2023-01-14T17:26:26Z" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlace -->
      </class> <!-- APIBasics.TestAPIClass -->
      <class name="SerializeDeserialize.SerializeTest">
        <test-method is-config="true" signature="before()[pri:0, instance:SerializeDeserialize.SerializeTest@2892dae4]" started-at="2023-01-14T17:26:19Z" name="before" finished-at="2023-01-14T17:26:19Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="addPlaceAPI()[pri:0, instance:SerializeDeserialize.SerializeTest@2892dae4]" started-at="2023-01-14T17:26:19Z" name="addPlaceAPI" finished-at="2023-01-14T17:26:20Z" duration-ms="829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPlaceAPI -->
      </class> <!-- SerializeDeserialize.SerializeTest -->
      <class name="RequestResponseSpec.TestSpecBuilder">
        <test-method signature="addPlace()[pri:1, instance:RequestResponseSpec.TestSpecBuilder@355ce81c]" started-at="2023-01-14T17:26:23Z" name="addPlace" finished-at="2023-01-14T17:26:24Z" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPlace -->
        <test-method is-config="true" signature="before()[pri:0, instance:RequestResponseSpec.TestSpecBuilder@355ce81c]" started-at="2023-01-14T17:26:23Z" name="before" finished-at="2023-01-14T17:26:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="updatePlace()[pri:2, instance:RequestResponseSpec.TestSpecBuilder@355ce81c]" started-at="2023-01-14T17:26:25Z" name="updatePlace" finished-at="2023-01-14T17:26:26Z" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePlace -->
        <test-method signature="getPlace()[pri:3, instance:RequestResponseSpec.TestSpecBuilder@355ce81c]" started-at="2023-01-14T17:26:26Z" name="getPlace" finished-at="2023-01-14T17:26:27Z" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlace -->
      </class> <!-- RequestResponseSpec.TestSpecBuilder -->
      <class name="APIBasics.ComplexJsonParser">
        <test-method signature="complesJsonResponse()[pri:0, instance:APIBasics.ComplexJsonParser@40cb8df7]" started-at="2023-01-14T17:26:14Z" name="complesJsonResponse" finished-at="2023-01-14T17:26:16Z" duration-ms="2122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complesJsonResponse -->
      </class> <!-- APIBasics.ComplexJsonParser -->
      <class name="APIBasics.DynamicJson">
        <test-method is-config="true" signature="before()[pri:0, instance:APIBasics.DynamicJson@13b13b5d]" started-at="2023-01-14T17:26:16Z" name="before" finished-at="2023-01-14T17:26:16Z" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="AddPlace(java.lang.String, java.lang.String)[pri:0, instance:APIBasics.DynamicJson@13b13b5d]" started-at="2023-01-14T17:26:16Z" name="AddPlace" data-provider="BooksData" finished-at="2023-01-14T17:26:18Z" duration-ms="1945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yykl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7676]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPlace -->
        <test-method signature="AddPlace(java.lang.String, java.lang.String)[pri:0, instance:APIBasics.DynamicJson@13b13b5d]" started-at="2023-01-14T17:26:18Z" name="AddPlace" data-provider="BooksData" finished-at="2023-01-14T17:26:19Z" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ojojj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2369]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPlace -->
        <test-method signature="AddPlace(java.lang.String, java.lang.String)[pri:0, instance:APIBasics.DynamicJson@13b13b5d]" started-at="2023-01-14T17:26:19Z" name="AddPlace" data-provider="BooksData" finished-at="2023-01-14T17:26:19Z" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shkn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9377]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPlace -->
      </class> <!-- APIBasics.DynamicJson -->
      <class name="runner.Runner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.Runner@29647f75]" started-at="2023-01-14T17:26:20Z" name="setUpClass" finished-at="2023-01-14T17:26:21Z" duration-ms="1121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6babf3bf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@29647f75]" started-at="2023-01-14T17:26:21Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-14T17:26:22Z" duration-ms="1195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify if Place is being Successfully added using AddPlace API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Validating Place API's"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@29647f75]" started-at="2023-01-14T17:26:22Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-01-14T17:26:23Z" duration-ms="789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Delete Place API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Validating Place API's"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.Runner@29647f75]" started-at="2023-01-14T17:26:23Z" name="tearDownClass" finished-at="2023-01-14T17:26:23Z" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Runner -->
    </test> <!-- TestAPIClass -->
  </suite> <!-- Suite -->
</testng-results>
